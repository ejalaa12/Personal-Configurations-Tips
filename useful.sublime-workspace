{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"inter",
				"interpolation\tparam"
			],
			[
				"fit",
				"fitnesses\tstatement"
			],
			[
				"mu",
				"mutation_rate\tparam"
			],
			[
				"s",
				"security\tparam"
			],
			[
				"pro",
				"profil_point_medium_security_M\tstatement"
			],
			[
				"cham",
				"champ_constant\tfunction"
			],
			[
				"assereq",
				"assertEqual\tfunction"
			],
			[
				"assert_arr",
				"assert_array_equal\tfunction"
			],
			[
				"nor",
				"normalize\tfunction"
			],
			[
				"chamtou",
				"champ_carre_tournant\tfunction"
			],
			[
				"obs",
				"obstacle_point\tfunction"
			],
			[
				"hisbu",
				"history_delete_selected_button\tstatement"
			],
			[
				"hist",
				"history_frame\tstatement"
			],
			[
				"his",
				"history_box\tstatement"
			],
			[
				"beha",
				"behavior_function\tstatement"
			],
			[
				"det",
				"detectAndCompute"
			],
			[
				"mat",
				"matplotlib\tmodule"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 357.0,
		"last_filter": "pand",
		"selected_items":
		[
			[
				"pand",
				"Pandoc"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"git add",
				"Git: Add All"
			],
			[
				"synmar",
				"Set Syntax: Markdown"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"new fil",
				"File: New File Relative to Current View"
			],
			[
				"skin",
				"Preferences: Key Bindings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"packli",
				"Package Control: List Packages"
			],
			[
				"change",
				"Git: Change Branch"
			],
			[
				"histo",
				"Git: Commit history"
			],
			[
				"git his",
				"Git: Commit history"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"modu",
				"Snippet: Module"
			],
			[
				"git comm",
				"Git: Commit history"
			],
			[
				"snipp",
				"Snippet: Module"
			],
			[
				"git ad",
				"Git: Add All"
			],
			[
				"git statu",
				"Git: Status"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"can",
				"Build: Cancel"
			],
			[
				"pytho",
				"Set Syntax: Python"
			],
			[
				"chan",
				"Git: Change Branch"
			],
			[
				"git chan",
				"Git: Change Branch"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"git stau",
				"Git: Status"
			],
			[
				"git ",
				"Git: Status"
			],
			[
				"",
				"Bookmarks: Select Next"
			],
			[
				"cance",
				"Build: Cancel"
			],
			[
				"remote",
				"Git: Track Remote Branch"
			],
			[
				"git bran",
				"Git: New Branch"
			],
			[
				"cancel",
				"Build: Cancel"
			],
			[
				"canc",
				"Build: Cancel"
			],
			[
				"cacn",
				"Build: Cancel"
			],
			[
				"py",
				"Set Syntax: Python"
			],
			[
				"console",
				"Set Syntax: R Console"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"anacon",
				"Anaconda: Vagrant Enable"
			],
			[
				"git pull",
				"Git: Pull"
			],
			[
				"git qui",
				"Git: Quick Commit"
			],
			[
				"tab",
				"Indentation: Convert to Tabs"
			],
			[
				"cane",
				"File: Copy Name Encoded"
			],
			[
				"search",
				"File: Search Files"
			],
			[
				"git s",
				"Git: Status"
			],
			[
				"git a",
				"Git: Add All"
			],
			[
				"git add all",
				"Git: Add All"
			],
			[
				"git pul",
				"Git: Pull"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"git add ",
				"Git: Add All"
			],
			[
				"listpa",
				"Package Control: List Packages"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"auto",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"pep8",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"package list",
				"Package Control: List Packages"
			],
			[
				"pyt",
				"Set Syntax: Python"
			],
			[
				"inden",
				"Indentation: Reindent Lines"
			]
		],
		"width": 575.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/ejalaa/Development/personal cfg and tips"
	],
	"file_history":
	[
		"/Users/ejalaa/Development/personal cfg and tips/docker_cheatsheet.mdown",
		"/Users/ejalaa/Development/personal cfg and tips/git_cheatsheet.mdown",
		"/Users/ejalaa/Development/personal cfg and tips/.gitignore",
		"/Users/ejalaa/Development/personal cfg and tips/useful.mdown",
		"/Users/ejalaa/Library/Application Support/Sublime Text 3/Packages/User/codeblock-md.sublime-snippet",
		"/Users/ejalaa/Library/Application Support/Sublime Text 3/Packages/User/csplit.sublime-snippet",
		"/Users/ejalaa/Documents/Courses/ENSTA/UV 5.0 - English/assignement2-tedtalk.mdown",
		"/Users/ejalaa/Library/Application Support/Sublime Text 3/Packages/Terminal/Terminal.sublime-settings",
		"/Users/ejalaa/Library/Preferences/com.apple.Terminal.plist",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/tests/test_exp_ga.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/tests/test_ga.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/models/sailboat.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/Environment.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/models/char.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/tests/test_experience.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/experiences/observer.py",
		"/Users/ejalaa/Documents/Courses/ENSTA/UV 5.6 - Automatique & Robotique/AUV Modeling/auv.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/models/model.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/experiences/environment.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/experiences/experience.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/ai_ga_example.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/tests/test_simulate.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/nnGA/individual.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/nnGA/population.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/tests/test_max_function.py",
		"/Users/ejalaa/Library/Application Support/Sublime Text 3/Packages/User/header-python",
		"/Users/ejalaa/Documents/Projects/Brest2016/brest2016_ws/src/sensors/launch/imu_simple.launch",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/__init__.py",
		"/Users/ejalaa/.bash_profile",
		"/Users/ejalaa/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/todo.md",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/simulation_gui.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/DubinsCar.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/models/tests/test_sailboat.py",
		"/Users/ejalaa/Documents/Machine Learning/MLRobot/models/tests/plottest.py",
		"/Users/ejalaa/Documents/Robotics/Commande/RobMOOC/robmooc octave/ex_sailboat.m",
		"/Users/ejalaa/Documents/Machine Learning/AI - wall avoidance/ga.py",
		"/Users/ejalaa/Documents/Machine Learning/AI - wall avoidance/simulation_gui.py",
		"/Users/ejalaa/Documents/Machine Learning/AI - wall avoidance/ai_regulator.py",
		"/Users/ejalaa/Documents/Machine Learning/AI - wall avoidance/simulation.py",
		"/Users/ejalaa/Documents/Machine Learning/PyBrain/pybrain/pybrain/optimization/optimizer.py",
		"/Users/ejalaa/Documents/Machine Learning/Problems/Fun - NN image modifier/test.py",
		"/Users/ejalaa/Desktop/ga_curve_fitting.py",
		"/Users/ejalaa/Documents/Machine Learning/Problems/GA - Finding Center/with_pybrain.py",
		"/Users/ejalaa/Documents/Machine Learning/AI - wall avoidance/ai_ga_example.py",
		"/Users/ejalaa/Documents/Machine Learning/PyBrain/pybrain/docs/documentation.pdf",
		"/Users/ejalaa/Desktop/curve_fitting_lebars.py",
		"/Users/ejalaa/Desktop/Ubuntu Backup/Digital Image Processing/exercice 05/Lenna.png",
		"/Users/ejalaa/Documents/Machine Learning/PyBrain/pybrain/pybrain/rl/learners/learner.py",
		"/Users/ejalaa/Documents/Machine Learning/PyBrain/pybrain/pybrain/rl/learners/directsearch/directsearch.py",
		"/Users/ejalaa/Documents/Machine Learning/PyBrain/pybrain/pybrain/utilities.py",
		"/Users/ejalaa/Documents/Machine Learning/PyBrain/pybrain/docs/html/api/optimization/optimization.html",
		"/Users/ejalaa/Documents/Machine Learning/Problems/GANN - Obstacle classifier/readme.md",
		"/Users/ejalaa/Documents/Machine Learning/neural-networks-and-deep-learning/fig/mnist.py",
		"/Users/ejalaa/Documents/Machine Learning/Problems/GA - Finding Center/own_imp.py",
		"/Users/ejalaa/Documents/Courses/Machine Learning/Problems/GA - Finding Center/with_pybrain.py",
		"/Users/ejalaa/Documents/Courses/Machine Learning/PyBrain/pybrain/pybrain/optimization/populationbased/ga.py",
		"/Users/ejalaa/Documents/Courses/Machine Learning/PyBrain/pybrain/pybrain/optimization/optimizer.py",
		"/Users/ejalaa/Documents/Projects/Machine Learning/AI - wall avoidance/ai_ga_example.py",
		"/Users/ejalaa/Documents/Courses/Machine Learning/PyBrain/pybrain/pybrain/utilities.py",
		"/Users/ejalaa/Documents/Courses/Machine Learning/Problems/Tree Exploration/Graph.py",
		"/Users/ejalaa/Downloads/ros_install.sh",
		"/Users/ejalaa/.zshrc",
		"/Users/ejalaa/Downloads/ros_install-part2.sh",
		"/opt/ros/jade/bin/rosrun",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/process/src/behavior_client.py",
		"/Users/ejalaa/ros_catkin_ws/devel_isolated/setup.bash",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/README.md",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/process/msg/BehaviorInfo.msg",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/Brouillon_&_Tests/simulateur/obstacle_creator_gui.py",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/Architecture/Obstacle_manager",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/process/src/behavior_server.py",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/sensors/src/imu_node.py",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/process/launch/mission_vector_field.launch",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/process/src/regulateur_champs.py",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/actuators/src/motor_controller.py",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/actuators/src/cmd_to_ramp.py",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/process/src/gui_behavior_adder.py",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/nmea_navsat_driver-indigo-devel/scripts/nmea_serial_driver",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/utilities/src/LL_to_local.py",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/rviz_satellite/src/map2world_tf_broadcaster.py",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/teleop/src/keys_to_twist.py",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/process/launch/mission_vector_field_without_imu.launch",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/teleop/launch/teleop_morse.launch",
		"/Users/ejalaa/Downloads/game.of.thrones.s06.e05.the.door.(2016).fre.1cd.(6636343)/Game of Thrones - 06x05 - The Door.AVS.French.C.orig.Addic7ed.com.srt",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/devel/lib/python2.7/dist-packages/process/msg/_BehaviorInfo.py",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/Brouillon_&_Tests/Behavior.py",
		"/Users/ejalaa/Library/Application Support/Sublime Text 3/Packages/User/Python.sublime-settings",
		"/Users/ejalaa/Downloads/Conversation/M-c Koch - Messages.html",
		"/Users/ejalaa/Documents/Personal Projects/Brest2016/brest2016_ws/src/sensors/src/Camera_publisher.py",
		"/Users/ejalaa/Documents/Courses/Robotics/UV3.5_Signal_Processing/OpenCV/videoCapture.py",
		"/Users/ejalaa/Pictures/Photo Booth Library/Pictures/Photo on 10-04-16 at 11.55.jpg",
		"/Users/ejalaa/Development/94p.py",
		"/Users/ejalaa/Desktop/Python.sublime-settings"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"plotResults",
			"c",
			"self.X",
			"self.x",
			"self.X",
			"self.x",
			"self.X",
			"p1",
			"p4",
			"y",
			"x",
			"PointEvo",
			"Greys",
			"face",
			"cv2",
			"self.x",
			"x",
			"genetic algorithm",
			",",
			"cmap",
			"hillclimber",
			"0",
			"network",
			"Network",
			":10",
			"10",
			"40j",
			"10",
			"0:",
			"0",
			"-20",
			"20",
			"HIGH",
			"MEDIUM",
			"20",
			"100j",
			"40j",
			"profil_point_high_security",
			"10j",
			"EX_L",
			"dir_tournant",
			"40j",
			"interieur",
			"20",
			"U",
			"dirc",
			"stereo",
			"obstacle_point_button",
			"type_chosen",
			"print",
			"history_box",
			"message.datetime"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 121.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"pinned_build_system": "Packages/User/pybrain.sublime-build",
	"project": "useful.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"tesga",
				"tests/test_ga.py"
			],
			[
				"tesex",
				"tests/test_experience.py"
			],
			[
				"ob",
				"experiences/observer.py"
			],
			[
				"mode",
				"models/model.py"
			],
			[
				"testex",
				"tests/test_experience.py"
			],
			[
				"en",
				"Environment.py"
			],
			[
				"envi",
				"experiences/environment.py"
			],
			[
				"char",
				"models/char.py"
			],
			[
				"model",
				"models/model.py"
			],
			[
				"ga",
				"AI - wall avoidance/ga.py"
			],
			[
				"",
				"AI - wall avoidance/simulation_gui.py"
			],
			[
				"mnis",
				"neural-networks-and-deep-learning/fig/mnist.py"
			],
			[
				"msgbeh",
				"brest2016_ws/src/process/msg/BehaviorInfo.msg"
			],
			[
				"read",
				"README.md"
			],
			[
				"regul",
				"brest2016_ws/src/process/src/regulateur_champs.py"
			],
			[
				"simcha",
				"brest2016_ws/src/simulation2d/src/sim_char.py"
			],
			[
				"obs",
				"Brouillon_&_Tests/simulateur/obstacle_creator_gui.py"
			],
			[
				"obsta",
				"Architecture/Obstacle_manager"
			],
			[
				"champsu",
				"brest2016_ws/src/process/src/champs_numpy.py"
			],
			[
				"behavioser",
				"brest2016_ws/src/process/src/behavior_server.py"
			],
			[
				"rea",
				"README.md"
			],
			[
				"gui",
				"Brouillon_&_Tests/simulateur/obstacle_creator_gui.py"
			],
			[
				"serv",
				"brest2016_ws/src/process/src/behavior_server.py"
			],
			[
				"champ",
				"brest2016_ws/src/process/src/champs_numpy.py"
			],
			[
				"imun",
				"brest2016_ws/src/sensors/src/imu_node.py"
			],
			[
				"behaser",
				"brest2016_ws/src/process/src/behavior_server.py"
			],
			[
				"cmdra",
				"brest2016_ws/src/actuators/src/cmd_to_ramp.py"
			],
			[
				"regualch",
				"brest2016_ws/src/process/src/regulateur_champs.py"
			],
			[
				"launcmor",
				"brest2016_ws/src/teleop/launch/teleop_morse.launch"
			],
			[
				"regualcha",
				"brest2016_ws/src/process/src/regulateur_champs.py"
			],
			[
				"imuno",
				"brest2016_ws/src/sensors/src/imu_node.py"
			],
			[
				"guibe",
				"brest2016_ws/src/process/src/gui_behavior_adder.py"
			],
			[
				"nme",
				"brest2016_ws/src/nmea_navsat_driver-indigo-devel/scripts/nmea_serial_driver"
			],
			[
				"regula",
				"brest2016_ws/src/process/src/regulateur_champs.py"
			],
			[
				"map2",
				"brest2016_ws/src/rviz_satellite/src/map2world_tf_broadcaster.py"
			],
			[
				"keys",
				"brest2016_ws/src/teleop/src/keys_to_twist.py"
			],
			[
				"motoro",
				"brest2016_ws/src/actuators/src/motor_controller.py"
			],
			[
				"cmdram",
				"brest2016_ws/src/actuators/src/cmd_to_ramp.py"
			],
			[
				"motor",
				"brest2016_ws/src/actuators/src/motor_controller.py"
			],
			[
				"behser",
				"brest2016_ws/src/process/src/behavior_server.py"
			],
			[
				"lltol",
				"brest2016_ws/src/utilities/src/LL_to_local.py"
			],
			[
				"cmto",
				"brest2016_ws/src/actuators/src/cmd_to_ramp.py"
			],
			[
				"behavior",
				"brest2016_ws/src/process/src/Behavior.py"
			],
			[
				"behavser",
				"brest2016_ws/src/process/src/behavior_server.py"
			],
			[
				"guiadd",
				"brest2016_ws/src/process/src/gui_behavior_adder.py"
			],
			[
				"beha",
				"brest2016_ws/src/process/src/Behavior.py"
			],
			[
				"beh",
				"Brouillon_&_Tests/Behavior.py"
			],
			[
				"server",
				"brest2016_ws/src/process/src/behavior_server.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/Courses/ENSTA/UV 5.7 - Shepherd/Shepherd.sublime-project"
			],
			[
				"shp",
				"~/Documents/Courses/ENSTA/UV 5.7 - Shepherd/Shepherd.sublime-project"
			],
			[
				"ml",
				"~/Documents/Robotics/IAMOOC/iamooc.sublime-project"
			],
			[
				"ia",
				"~/Documents/Robotics/IAMOOC/iamooc.sublime-project"
			],
			[
				"wall",
				"~/Documents/Projects/Machine Learning/AI - wall avoidance/wall avoidance.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ligne",
				"ligne"
			]
		],
		"width": 896.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 182.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
